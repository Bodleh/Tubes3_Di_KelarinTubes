// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240519182357_InitiateDatabase")]
    partial class InitiateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Biodata", b =>
                {
                    b.Property<string>("NIK")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Agama")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Alamat")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("GolonganDarah")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("JenisKelamin")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Kewarganegaraan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nama")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Pekerjaan")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("StatusPerkawinan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("TanggalLahir")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TempatLahir")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("NIK");

                    b.ToTable("Biodata");

                    b.HasData(
                        new
                        {
                            NIK = "1234567890123456",
                            Agama = "Religion X",
                            Alamat = "123 Main St",
                            GolonganDarah = "A",
                            JenisKelamin = "Male",
                            Kewarganegaraan = "Country X",
                            Nama = "John Doe",
                            Pekerjaan = "Software Engineer",
                            StatusPerkawinan = "Single",
                            TanggalLahir = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TempatLahir = "City A"
                        },
                        new
                        {
                            NIK = "6543210987654321",
                            Agama = "Religion Y",
                            Alamat = "456 Elm St",
                            GolonganDarah = "B",
                            JenisKelamin = "Female",
                            Kewarganegaraan = "Country Y",
                            Nama = "Jane Doe",
                            Pekerjaan = "Data Scientist",
                            StatusPerkawinan = "Married",
                            TanggalLahir = new DateTime(1990, 2, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            TempatLahir = "City B"
                        });
                });

            modelBuilder.Entity("server.SidikJari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BerkasCitra")
                        .HasColumnType("text")
                        .HasColumnName("berkas_citra");

                    b.Property<string>("NIK")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("nik");

                    b.Property<string>("Nama")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nama");

                    b.HasKey("Id");

                    b.HasIndex("NIK");

                    b.ToTable("SidikJari");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BerkasCitra = "test/contoh",
                            NIK = "1234567890123456",
                            Nama = "John's Fingerprint"
                        },
                        new
                        {
                            Id = 2,
                            BerkasCitra = "test/contoh",
                            NIK = "6543210987654321",
                            Nama = "Jane's Fingerprint"
                        });
                });

            modelBuilder.Entity("server.SidikJari", b =>
                {
                    b.HasOne("server.Biodata", "Biodata")
                        .WithMany("SidikJaris")
                        .HasForeignKey("NIK");

                    b.Navigation("Biodata");
                });

            modelBuilder.Entity("server.Biodata", b =>
                {
                    b.Navigation("SidikJaris");
                });
#pragma warning restore 612, 618
        }
    }
}
