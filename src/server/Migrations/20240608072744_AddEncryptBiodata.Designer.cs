// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240608072744_AddEncryptBiodata")]
    partial class AddEncryptBiodata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Biodata", b =>
                {
                    b.Property<string>("NIK")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasAnnotation("Relational:JsonPropertyName", "nik");

                    b.Property<string>("Agama")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "agama");

                    b.Property<string>("Alamat")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "alamat");

                    b.Property<string>("GolonganDarah")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasAnnotation("Relational:JsonPropertyName", "golonganDarah");

                    b.Property<string>("JenisKelamin")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "jenisKelamin");

                    b.Property<string>("Kewarganegaraan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "kewarganegaraan");

                    b.Property<string>("Nama")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasAnnotation("Relational:JsonPropertyName", "nama");

                    b.Property<string>("Pekerjaan")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasAnnotation("Relational:JsonPropertyName", "pekerjaan");

                    b.Property<string>("StatusPerkawinan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "statusPerkawinan");

                    b.Property<DateTime?>("TanggalLahir")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "tanggalLahir");

                    b.Property<string>("TempatLahir")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "tempatLahir");

                    b.HasKey("NIK");

                    b.ToTable("Biodata");
                });

            modelBuilder.Entity("server.EncryptedBiodata", b =>
                {
                    b.Property<string>("NIK")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "nik");

                    b.Property<string>("Agama")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "agama");

                    b.Property<string>("Alamat")
                        .HasMaxLength(25555)
                        .HasColumnType("character varying(25555)")
                        .HasAnnotation("Relational:JsonPropertyName", "alamat");

                    b.Property<string>("GolonganDarah")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "golonganDarah");

                    b.Property<string>("JenisKelamin")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "jenisKelamin");

                    b.Property<string>("Kewarganegaraan")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "kewarganegaraan");

                    b.Property<string>("Nama")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "nama");

                    b.Property<string>("Pekerjaan")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "pekerjaan");

                    b.Property<string>("StatusPerkawinan")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "statusPerkawinan");

                    b.Property<string>("TanggalLahir")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "tanggalLahir");

                    b.Property<string>("TempatLahir")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "tempatLahir");

                    b.HasKey("NIK");

                    b.ToTable("EncryptedBiodata");
                });

            modelBuilder.Entity("server.SidikJari", b =>
                {
                    b.Property<string>("BerkasCitra")
                        .HasColumnType("text")
                        .HasColumnName("berkas_citra")
                        .HasAnnotation("Relational:JsonPropertyName", "berkasCitra");

                    b.Property<string>("Nama")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nama")
                        .HasAnnotation("Relational:JsonPropertyName", "nama");

                    b.ToTable("SidikJari");
                });
#pragma warning restore 612, 618
        }
    }
}
